<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="MemberMapper">
  	<resultMap type="Member" id="memberResultMap">
  		<id property="memberNum" column="MEMBER_NUM"/>
  		<result property="memberName" column="MEMBER_NAME"/>
  		<result property="divCode" column="DIVISION"/>
  		<result property="division" column="DIV_NAME"/>
  		<result property="rankCode" column="RANK"/>
  		<result property="rank" column="RANK_NAME"/>
  		<result property="address" column="ADDRESS"/>
  		<result property="phone" column="PHONE"/>
  		<result property="mail" column="MAIL"/>
  		<result property="hireDate" column="HIRE_DATE"/>
  		<result property="retireDate" column="RETIRE_DATE"/>
  		<result property="birth" column="BIRTH"/>
  		<result property="account" column="ACCOUNT"/>
  		<result property="bank" column="BANK"/>
  		<result property="password" column="PASSWORD"/>
  		<result property="gender" column="GENDER"/>
  		<result property="photo" column="PHOTO"/>
  		<result property="breakTotal" column="BREAK_TOTAL"/>
  	</resultMap>
  	
  	<resultMap type="Division" id="divisionResultMap">
  		<id property="divCode" column="DIV_CODE"/>
  		<result property="memberNum" column="MEMBER_NUM"/>
  		<result property="divName" column="DIV_NAME"/>
  		<result property="divLevel" column="DIV_LEVEL"/>
  		<result property="parentDivCode" column="PARENT_DIV_CODE"/>
  	</resultMap>


<!-- 로그인 -->  	
  	<select id="selectLoginMember"  parameterType="Member" resultMap="memberResultMap">
  		SELECT MEMBER_NUM, MEMBER_NAME, DIV_NAME, RANK_NAME, ADDRESS, PHONE, MAIL, HIRE_DATE, RETIRE_DATE, BIRTH, ACCOUNT, BANK, PASSWORD, GENDER, PHOTO, BREAK_TOTAL FROM MEMBER JOIN DIVISION ON DIVISION = DIV_CODE JOIN RANK ON RANK = RANK_CODE WHERE MEMBER_NUM=#{memberNum} AND PASSWORD=#{password}
  	</select>
  	
<!-- 마이페이지 -->
  	<select id="selectOneById" resultMap="memberResultMap">
		SELECT 
		MEMBER_NUM,
		MEMBER_NAME,
		DIV_NAME,
		RANK_NAME,
		ADDRESS,PHONE,MAIL,
		HIRE_DATE,RETIRE_DATE,BIRTH,ACCOUNT,BANK,GENDER,PHOTO 
		FROM MEMBER 
		JOIN DIVISION ON DIVISION = DIV_CODE 
		JOIN RANK ON RANK = RANK_CODE WHERE MEMBER_NUM= #{memberNum} 
	</select>
	
<!-- 주소록 -->
	<select id="selectAllList" resultMap="memberResultMap">
		SELECT * FROM MEMBER JOIN DIVISION ON DIVISION = DIV_CODE JOIN RANK ON RANK = RANK_CODE
	</select>
	<select id="selectListCount" resultType="_int"> 
		SELECT COUNT(*) FROM MEMBER
	</select>
<!-- 주소록 검색 페이징-->
	<select id="selectListSearchCount" resultType="_int"> 
		SELECT COUNT(*) FROM MEMBER JOIN DIVISION ON DIVISION = DIV_CODE JOIN RANK ON RANK = RANK_CODE
		<if test="searchCondition.toString() == 'division'">
			WHERE DIV_NAME LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchCondition.toString() == 'rank'">
			WHERE RANK_NAME LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchCondition.toString() == 'memberName'">
			WHERE MEMBER_NAME LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchCondition.toString() == 'all'">
			WHERE (DIV_NAME LIKE '%' || #{searchValue} || '%'
			OR RANK_NAME LIKE '%' || #{searchValue} || '%'
			OR MEMBER_NAME LIKE '%' || #{searchValue} || '%')
		</if>
	</select>
<!-- 주소록 검색 -->
	<select id="selectMemberSearch" resultMap="memberResultMap">
		SELECT * FROM MEMBER JOIN DIVISION ON DIVISION = DIV_CODE JOIN RANK ON RANK = RANK_CODE
		<if test="searchCondition.toString() == 'division'">
			WHERE DIV_NAME LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchCondition.toString() == 'rank'">
			WHERE RANK_NAME LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchCondition.toString() == 'memberName'">
			WHERE MEMBER_NAME LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchCondition.toString() == 'all'">
			WHERE (DIV_NAME LIKE '%' || #{searchValue} || '%'
			OR RANK_NAME LIKE '%' || #{searchValue} || '%'
			OR MEMBER_NAME LIKE '%' || #{searchValue} || '%')
		</if>
	</select>
<!-- 조직도 -->
	<select id="selectOrganization" resultMap="divisionResultMap">
		SELECT DIV_NAME
		     , DIV_CODE
		     , PARENT_DIV_CODE
		     , CASE WHEN DIV_CODE = 'admin' THEN 2
                    ELSE DIV_LEVEL
                END DIV_LEVEL 
		  FROM ( SELECT DIV_CODE
		              , DIV_NAME
		              , DIV_LEVEL
		              , PARENT_DIV_CODE 
		           FROM DIVISION 
		           
		           UNION
		            
		           SELECT MEMBER_NUM
		                , MEMBER_NAME
		                , 3 "DIV_LEVEL"
		                , DIVISION 
		             FROM MEMBER
		        ) START WITH DIV_LEVEL = 1 
		     CONNECT BY PRIOR DIV_CODE = PARENT_DIV_CODE
	</select>
	
	<!-- 사원 조회 모달 -->
	<select id="selectAllModalMember" resultMap="memberResultMap">
		SELECT MEMBER_NUM, MEMBER_NAME, DIV_NAME, RANK_NAME, MAIL FROM MEMBER JOIN DIVISION ON DIVISION = DIV_CODE JOIN RANK ON RANK = RANK_CODE WHERE MEMBER_NUM != #{memberNum}
	</select>
	
	<!-- 사원 조회 모달 검색 -->
	<select id="selectModalMemberSearch" resultMap="memberResultMap">
		SELECT MEMBER_NUM, MEMBER_NAME, DIV_NAME, RANK_NAME FROM MEMBER JOIN DIVISION ON DIVISION = DIV_CODE JOIN RANK ON RANK = RANK_CODE WHERE MEMBER_NUM != #{memberNum}
		<if test="searchCondition.toString() == 'division'">
			AND DIV_NAME LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchCondition.toString() == 'rankName'">
			AND RANK_NAME LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchCondition.toString() == 'memberName'">
			AND MEMBER_NAME LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchCondition.toString() == 'all'">
			AND (DIV_NAME LIKE '%' || #{searchValue} || '%'
			OR MEMBER_NAME LIKE '%' || #{searchValue} || '%')
		</if>
		<if test="searchCondition.toString() == 'all2'">
			AND (DIV_NAME LIKE '%' || #{searchValue} || '%'
			OR MEMBER_NAME LIKE '%' || #{searchValue} || '%'
			OR RANK_NAME LIKE '%' || #{searchValue} || '%')
		</if>
	</select>
	
	<!-- 채팅 사용자 추가 초대 모달 -->
	<select id="selectListChatMember" resultMap="memberResultMap">
		SELECT MEMBER_NUM, MEMBER_NAME, DIV_NAME, RANK_NAME FROM MEMBER JOIN DIVISION ON DIVISION = DIV_CODE JOIN RANK ON RANK = RANK_CODE WHERE MEMBER_NUM NOT IN (SELECT MEM_NUM FROM CHAT_MEMBER WHERE CHAT_ROOM_NO = #{chatRoomNo} AND MEM_STATUS = 0)
	</select>
	
	<!-- 채팅 사용자 추가 초대 모달 검색 -->
	<select id="selectListChatMemberSearch" resultMap="memberResultMap">
		SELECT MEMBER_NUM, MEMBER_NAME, DIV_NAME, RANK_NAME FROM MEMBER JOIN DIVISION ON DIVISION = DIV_CODE JOIN RANK ON RANK = RANK_CODE WHERE MEMBER_NUM NOT IN (SELECT MEM_NUM FROM CHAT_MEMBER WHERE CHAT_ROOM_NO = #{chatRoomNo} AND MEM_STATUS = 0)
		<if test="searchCondition.toString() == 'division'">
			AND DIV_NAME LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchCondition.toString() == 'rankName'">
			AND RANK_NAME LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchCondition.toString() == 'memberName'">
			AND MEMBER_NAME LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchCondition.toString() == 'all'">
			AND (DIV_NAME LIKE '%' || #{searchValue} || '%'
			OR MEMBER_NAME LIKE '%' || #{searchValue} || '%')
		</if>
	</select>
	
	<!-- 넥사크로 - 관리자 -->
	<!-- 사원 전체 조회 -->
	<select id="selectAllListMemberNexa" resultMap="memberResultMap">
		SELECT * FROM MEMBER JOIN DIVISION ON DIVISION = DIV_CODE JOIN RANK ON RANK = RANK_CODE
		<if test="searchCondition.toString() == 'exist'"><!-- 재직자 -->
			WHERE RETIRE_DATE IS NULL
		</if>
		<if test="searchCondition.toString() == 'noExist'"><!-- 퇴직자 -->
			WHERE RETIRE_DATE IS NOT NULL
		</if>
		<!-- 검색 -->
		<if test="searchCondition.toString() == 'memberName'">
			WHERE MEMBER_NAME LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchCondition.toString() == 'division'">
			WHERE DIV_NAME LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchCondition.toString() == 'rank'">
			WHERE RANK_NAME LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="searchCondition.toString() == 'all'">
			WHERE (MEMBER_NAME LIKE '%' || #{searchValue} || '%'
			OR DIV_NAME LIKE '%' || #{searchValue} || '%'
			OR RANK_NAME LIKE '%' || #{searchValue} || '%')
		</if>
	</select>
	<!-- 사원 등록 -->
	<insert id="insertMember">
		INSERT INTO MEMBER VALUES(
		#{memberNum}, 
		#{memberName}, 
		#{division}, 
		#{rank}, 
		#{address}, 
		#{phone}, 
		#{mail}, 
		#{hireDate}, 
		#{retireDate}, 
		#{birth},
		#{account},
		#{bank},
		#{password},
		#{gender},
		#{photo},
		#{breakTotal})
	</insert>
	<!-- 사원 상세 조회 -->
	<select id="selectOneMember" resultMap="memberResultMap">
		SELECT * FROM MEMBER JOIN DIVISION ON DIVISION = DIV_CODE JOIN RANK ON RANK = RANK_CODE WHERE MEMBER_NUM = #{memberNum}
	</select>
	<!-- 사원 삭제 -->
	<delete id="deleteMember">
		DELETE FROM MEMBER WHERE MEMBER_NUM = #{memberNum}
	</delete>
	<!-- 사원 정보 수정 -->
	<update id="updateMember">
		UPDATE MEMBER SET 
			MEMBER_NAME = #{memberName}, 
			DIVISION = #{divCode},
			RANK = #{rankCode},
			ADDRESS = #{address},
			PHONE = #{phone},
			MAIL = #{mail}, 
			HIRE_DATE = #{hireDate}, 
			RETIRE_DATE = #{retireDate}, 
			BIRTH = #{birth},
			ACCOUNT = #{account},
			BANK = #{bank},
			PASSWORD = #{password},
			GENDER = #{gender},
			PHOTO = #{photo},
			BREAK_TOTAL = #{breakTotal}
		WHERE MEMBER_NUM = #{memberNum}
	</update>
	<!-- 조직도 -->
	<!-- 부서 조회 -->
	<select id="selectAllDivision" resultMap="divisionResultMap">
		SELECT * FROM DIVISION ORDER BY DIV_CODE
	</select>
	<!-- 부서 사원 조회 -->
	<select id="selectOneDivision" resultMap="divisionResultMap">
		SELECT DIV_CODE, DIV_NAME, DIV_LEVEL FROM DIVISION WHERE DIV_CODE = #{divCode}
		UNION ALL
		SELECT MEMBER_NUM AS DIV_CODE, MEMBER_NAME AS DIV_NAME, 3 AS DIV_LEVEL FROM MEMBER JOIN DIVISION ON DIVISION = DIV_CODE WHERE DIV_CODE = #{divCode}
	</select>
  </mapper>